{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,sBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAQlB,SACA,uBACAO,KAAK,OACLC,MAAQT,EACRU,SArBqB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACiCC,UAAUH,GAD3C,+DAEDI,MAAMF,GAFL,cAEbG,EAFa,gBAGCA,EAAKC,OAHN,uBAGZC,EAHY,EAGZA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GACjB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKA,UAAU,QAAQC,IAAKjB,EAAKkB,IAAKR,IACtC,4BAAIA,QCFHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAa,IAAD,EACXd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAkBrC,OAbAC,qBAAU,WAEN1B,EAAQC,GAAU0B,MAAM,SAAAC,GAEhBH,EAAW,CACPjB,KAAMoB,EACNL,SAAS,SAKtB,CAACtB,IAEGuB,EDdyBK,CAAa5B,GAAhCa,EAFsB,EAE5BN,KAAce,EAFc,EAEdA,QA4BrB,OACI,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAGR,qBAAKA,UAAU,YAAf,SAGGL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEzCjBkB,EAAe,WAAM,MAGM3C,mBAAS,CAAC,aAHhB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAU9B,OACI,qCACI,iDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADJA,Y,MCnB/B+B,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.61d82c5f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange= (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n\r\n        if (inputValue.trim().length>2){\r\n            setCategories(cats => [inputValue,...cats ])\r\n            setInputValue('')\r\n        }\r\n\r\n        //setCategories\r\n        // console.log('Submit hecho')\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n        <input \r\n        type='text'\r\n        value= {inputValue}\r\n        onChange={handleInputChange}\r\n        />   \r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async (category) => {\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=tJpYKEMjTCBfhlgI3JTcaKtpjX3AIj8p`\r\n    const resp= await fetch(url);\r\n    const {data}= await resp.json();\r\n\r\n    const gifs= data.map(img => {\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n        })\r\n    \r\n    return gifs;\r\n    \r\n\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log(id,title,url)\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img className='image' src={url} alt={title}/>\r\n            <p>{title}</p>\r\n            {/* {img.title} */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    // const [images, setImages] = useState([])\r\n\r\n    // // const [count, setCount] = useState(0);\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //     .then(setImages)\r\n    // }, [ category])\r\n\r\n    // const getGifs = async () => {\r\n    //     const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=tJpYKEMjTCBfhlgI3JTcaKtpjX3AIj8p`\r\n    //     const resp= await fetch(url);\r\n    //     const {data}= await resp.json();\r\n\r\n    //     const gifs= data.map(img => {\r\n    //         return {\r\n    //             id:img.id,\r\n    //             title: img.title,\r\n    //             url: img.images.downsized_medium.url\r\n    //         }\r\n    //         })\r\n    //     console.log(gifs);\r\n    //     setImages(gifs);\r\n\r\n    // }\r\n    // getGifs();\r\n    return (\r\n        <>\r\n          <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n          {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n          \r\n              <div className='card-grid'>\r\n            \r\n               {\r\n                 images.map (img =>( \r\n                     <GifGridItem \r\n                     key={img.id}\r\n                     {...img} />\r\n                 ) )\r\n               }\r\n              \r\n              </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n\r\n        getGifs(category).then( imgs => {\r\n\r\n                setState ( {\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            \r\n            }\r\n        )\r\n    }, [category])\r\n\r\n    return state; //data:[], loading: true;\r\n\r\n}","import React from 'react'\r\nimport { useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X','Meliodas']\r\n    const [categories, setCategories] = useState(['Meliodas']);\r\n    \r\n    // const handleAdd = () =>{\r\n    //     // setCategories([...categories, 'Levi']);\r\n    //     setCategories(cats => [...cats, 'HunterXHunter']);\r\n\r\n    // }\r\n    return (\r\n        <>\r\n            <h2> Gif Expert App</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            {/* <button onClick={handleAdd}> Agregar</button> */}\r\n            <ul>\r\n                {\r\n                    categories.map( category=> \r\n                         <GifGrid  \r\n                         key= {category}\r\n                         category={category}/> \r\n                    )\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n\n  document.getElementById('root')\n);\n\n//GifExpertApp\n//h2 GitExpertApp\n//hr\n"],"sourceRoot":""}